version: '3.8'
services:
  # setup:
  #   profiles:
  #     - setup
  #   build:
  #     context: setup/
  #     args:
  #       ELASTIC_VERSION: ${ELASTIC_VERSION}
  #   init: true
  #   volumes:
  #     - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
  #     - ./setup/lib.sh:/lib.sh:ro,Z
  #     - ./setup/roles:/roles:ro,Z
  #   environment:
  #     ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
  #     LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
  #     KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
  #     METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
  #     FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
  #     HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
  #     MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
  #     BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
  #   depends_on:
  #     - elasticsearch

  # elasticsearch:
  #   build:
  #     context: elasticsearch/
  #     args:
  #       ELASTIC_VERSION: ${ELASTIC_VERSION}
  #   volumes:
  #     - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
  #     - elasticsearch:/usr/share/elasticsearch/data:Z
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   environment:
  #     node.name: elasticsearch
  #     ES_JAVA_OPTS: -Xms512m -Xmx512m
  #     # Bootstrap password.
  #     # Used to initialize the keystore during the initial startup of
  #     # Elasticsearch. Ignored on subsequent runs.
  #     ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
  #     # Use single node discovery in order to disable production mode and avoid bootstrap checks.
  #     # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
  #     discovery.type: single-node
  #   restart: unless-stopped

  # logstash:
  #   build:
  #     context: logstash/
  #     args:
  #       ELASTIC_VERSION: ${ELASTIC_VERSION}
  #   volumes:
  #     - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
  #     - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
  #   ports:
  #     - 5044:5044
  #     - 50000:50000/tcp
  #     - 50000:50000/udp
  #     - 9600:9600
  #   environment:
  #     LS_JAVA_OPTS: -Xms256m -Xmx256m
  #     LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
  #   depends_on:
  #     - elasticsearch
  #   restart: unless-stopped

  # kibana:
  #   build:
  #     context: kibana/
  #     args:
  #       ELASTIC_VERSION: ${ELASTIC_VERSION}
  #   volumes:
  #     - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
  #   ports:
  #     - 5601:5601
  #   environment:
  #     KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
  #   depends_on:
  #     - elasticsearch
  #   restart: unless-stopped

  db:
    image: postgres:15-alpine
    restart: always
    expose:
      - 5432
    environment:
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      # App will create its own DB!
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
    ports:
      # Expose on different port to prevent conflict with local
      - '6543:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - '5050:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@project.com
      - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_CONFIG_LOGIN_BANNER='ARGLEBARGLE'
      - PGADMIN_CONFIG_CONSOLE_LOG_LEVEL=40
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  redis:
    image: redis:7-alpine
    restart: always
    expose:
      - 7468
    ports:
      - '7468:6379'
    command: redis-server --save 50 1 --loglevel warning
    volumes:
      - redis_data:/data

  backend:
    depends_on:
      - db
      - redis
    build: ./services/backend
    working_dir: /backend/app
    restart: always
    ports:
      - '8000:8000'
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - PYTHONDONTWRITEBYTECODE=1
      - PROJECT_NAME=Project
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=admin
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=project_database
      - REDIS=redis
    command: uvicorn src.main:app --host=0.0.0.0 --port=8000 --reload --log-level 'debug'
    volumes:
      - ./services/backend/app:/backend/app
      - /backend/app/.ignore

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin-data:
    driver: local
  elasticsearch:
    driver: local
